---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import type { Props as BaseHeadProps } from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

type Props = CollectionEntry<"blog">["data"] & Pick<BaseHeadProps, "imageUrl">;

const { title, description, imageUrl, isoCreatedAt, keywords } = Astro.props;
---

<html lang="en" data-theme="dark" class="dark">
  <head>
    <BaseHead title={title} description={description} imageUrl={imageUrl} />
    <meta property="og:type" content="article" />
    <meta property="og:article:author" content="Pakata Goh" />
    <meta property="og:article:published_time" content={isoCreatedAt} />
    {
      keywords?.map((keyword) => (
        <meta property="og:article:tag" content={keyword} />
      ))
    }
  </head>

  <body
    class="transition duration-150 dark:bg-gray-800 dark:text-white relative min-h-screen px-4 py-3 md:mx-auto md:max-w-3xl"
  >
    <Header />
    <div class="flex-grow">
      <slot />
    </div>
    <Footer />
    <script>
      // speed insights
      window.si =
        window.si ||
        function () {
          (window.siq = window.siq || []).push(arguments);
        };

      // analytics
      window.va =
        window.va ||
        function () {
          (window.vaq = window.vaq || []).push(arguments);
        };
    </script>
    <script defer src="/_vercel/speed-insights/script.js"></script>
    <script defer src="/_vercel/insights/script.js"></script>
  </body>
</html>
